import config from "../../config/config";var React = require('react');var ReactDOM = require('react-dom');export default class Goodsgroup extends React.Component {    constructor(props) {        super(props);        this.state = {            skuIdsCommon: '6733',            addGroupIdsCommon: '1,2',            skuIdsPrivateOne: '5934',            addGroupIdsPrivateOne: '1',            skuIdsPrivateTwo: '6478',            addGroupIdsPrivateTwo: '2',            skuIdsDelete: '5934,6733,6478',            deleteGroupIds:'1,2',            operateId:41864        }    }    handleChangeCommonSkuIds(e){        this.setState({            skuIdsCommon:e.target.value,        });    }    handleChangeCommonAddGroupIds(e){        this.setState({            addGroupIdsCommon:e.target.value,        });    }    handleChangeCommon(){        const formData = new FormData();        formData.append("skuIds",this.state.skuIdsCommon);        formData.append("addGroupIds",this.state.addGroupIdsCommon);        formData.append("deleteGroupIds",'');        formData.append("operateId",this.state.operateId);        const requestBody=new URLSearchParams(formData).toString();        console.log("requestBody=" +requestBody);        const url = config.relationEdit;        const opts = {            mode: 'cors',            method:"POST",            body:requestBody,            headers: {                'Accept': 'application/json',                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',            },        };        fetch(url, opts).then(res => res.text())            .then(data => {                const resData=JSON.parse(data);                console.log("data=" +JSON.stringify(data));                if(                    resData.success                ){                    alert(resData.successInfo);                }else {                    alert(resData.errorMessage);                }            }).catch(e => console.log('错误:', e))    }    handleChangePrivateOneSkuIds(e){        this.setState({            skuIdsPrivateOne:e.target.value,        });    }    handleChangePrivateOneAddGroupIds(e){        this.setState({            addGroupIdsPrivateOne:e.target.value,        });    }    handleChangePrivateOne(){        const formData = new FormData();        formData.append("skuIds",this.state.skuIdsPrivateOne);        formData.append("addGroupIds",this.state.addGroupIdsPrivateOne);        formData.append("deleteGroupIds",'');        formData.append("operateId",this.state.operateId);        const requestBody=new URLSearchParams(formData).toString();        console.log("requestBody=" +requestBody);        const url = config.relationEdit;        const opts = {            mode: 'cors',            method:"POST",            body:requestBody,            headers: {                'Accept': 'application/json',                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',            },        };        fetch(url, opts).then(res => res.text())            .then(data => {                const resData=JSON.parse(data);                console.log("data=" +JSON.stringify(data));                if(                    resData.success                ){                    alert(resData.successInfo);                }else {                    alert(resData.errorMessage);                }            }).catch(e => console.log('错误:', e))    }    handleChangePrivateTwoSkuIds(e){        this.setState({            skuIdsPrivateTwo:e.target.value,        });    }    handleChangePrivateTwoAddGroupIds(e){        this.setState({            addGroupIdsPrivateTwo:e.target.value,        });    }    handleChangePrivateTwo(){        const formData = new FormData();        formData.append("skuIds",this.state.skuIdsPrivateTwo);        formData.append("addGroupIds",this.state.addGroupIdsPrivateTwo);        formData.append("deleteGroupIds",'');        formData.append("operateId",this.state.operateId);        const requestBody=new URLSearchParams(formData).toString();        console.log("requestBody=" +requestBody);        const url = config.relationEdit;        const opts = {            mode: 'cors',            method:"POST",            body:requestBody,            headers: {                'Accept': 'application/json',                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',            },        };        fetch(url, opts).then(res => res.text())            .then(data => {                const resData=JSON.parse(data);                console.log("data=" +JSON.stringify(data));                if(                    resData.success                ){                    alert(resData.successInfo);                }else {                    alert(resData.errorMessage);                }            }).catch(e => console.log('错误:', e))    }    handleChangeDeleteSkuIds(e){        this.setState({            skuIdsDelete:e.target.value,        });    }    handleChangeDeleteGroupIds(e){        this.setState({            deleteGroupIds:e.target.value,        });    }    handleChangeDelete(){        const formData = new FormData();        formData.append("skuIds",this.state.skuIdsDelete);        formData.append("addGroupIds",'');        formData.append("deleteGroupIds",this.state.deleteGroupIds);        formData.append("operateId",this.state.operateId);        const requestBody=new URLSearchParams(formData).toString();        console.log("requestBody=" +requestBody);        const url = config.relationEdit;        const opts = {            mode: 'cors',            method:"POST",            body:requestBody,            headers: {                'Accept': 'application/json',                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',            },        };        fetch(url, opts).then(res => res.text())            .then(data => {                const resData=JSON.parse(data);                console.log("data=" +JSON.stringify(data));                if(                    resData.success                ){                    alert(resData.successInfo);                }else {                    alert(resData.errorMessage);                }            }).catch(e => console.log('错误:', e))    }    render(){        return(            <div>                <div>                <div>商品分组共有skuId关联</div>                <div>                    <label >skuId：<input id="skuIds" type="text" value={this.state.skuIdsCommon} onChange={e => this.handleChangeCommonSkuIds(e)} defaultValue={this.state.skuIdsCommon}                    />SkuIds:6733</label>                </div>                <div>                    <label >商品分组：<input id="addGroupIds" type="text" value={this.state.addGroupIdsCommon} onChange={e => this.handleChangeCommonAddGroupIds(e)} defaultValue={this.state.addGroupIdsCommon}                    />云丰:1,云果:2</label>                </div>                <div>                    <label >                        <button onClick={this.handleChangeCommon.bind(this)}>提交</button>                    </label>                </div>                </div>                <br/>                <div>                    <div>商品分组私有skuId关联-----1</div>                    <div>                        <label >skuId：<input id="skuIds" type="text" value={this.state.skuIdsPrivateOne} onChange={e => this.handleChangePrivateOneSkuIds(e)}                        />Skuid:5934</label>                    </div>                    <div>                        <label >商品分组：<input id="addGroupIds" type="text" value={this.state.addGroupIdsPrivateOne} onChange={e => this.handleChangePrivateOneAddGroupIds(e)}                        />云丰:1</label>                    </div>                    <div>                        <label >                            <button onClick={this.handleChangePrivateOne.bind(this)}>提交</button>                        </label>                    </div>                </div>                <br/>                <div>                    <div>商品分组私有skuId关联-----2</div>                    <div>                        <label >skuId：<input id="skuIdsTow" type="text"  value={this.state.skuIdsPrivateTwo} onChange={e => this.handleChangePrivateTwoSkuIds(e)}                        />Skuid:6478</label>                    </div>                    <div>                        <label >商品分组：<input id="addGroupIdsTow" type="text" value={this.state.addGroupIdsPrivateTwo} onChange={e => this.handleChangePrivateTwoAddGroupIds(e)}                        />云果:2</label>                    </div>                    <div>                        <label >                            <button onClick={this.handleChangePrivateTwo.bind(this)}>提交</button>                        </label>                    </div>                </div>                <br/>                <div>                    <div>清除商品分组与skuID关联</div>                    <div>                        <label >skuId：<input id="skuIds" type="text" value={this.state.skuIdsDelete} onChange={e => this.handleChangeDeleteSkuIds(e)}                        />Skuid:5934,6733,6478</label>                    </div>                    <div>                        <label >商品分组：<input id="deleteGroupIds" type="text" value={this.state.deleteGroupIds} onChange={e => this.handleChangeDeleteGroupIds(e)}                        />云丰:1,云果:2</label>                    </div>                    <div>                        <label>                            <button onClick={this.handleChangeDelete.bind(this)}>提交</button>                        </label>                    </div>                </div>            </div>        );    }}