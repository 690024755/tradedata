var React = require('react');var ReactDOM = require('react-dom');import config from '../../config/config.json';export default class Balances extends React.Component{    handleSearch(){        const mobile = this.inputMobileValue.value;        const cashAmount = this.inputCashAmountValue.value;        const subsidyAmount = this.inputSubsidyAmountValue.value;        const formData = new FormData();        formData.append("mobile",mobile);        formData.append("cashAmount",cashAmount);        formData.append("subsidyAmount",subsidyAmount);        formData.append("baseCashAmount","0");        const requestBody=new URLSearchParams(formData).toString()        const url = config.modifyBalance;        const opts = {            mode: 'cors',            method:"POST",            body:requestBody,            headers: {                'Accept': 'application/json',                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',            },        };        fetch(url, opts).then(res => res.text())            .then(data => {                const resData=JSON.parse(data);                console.log("data=" +JSON.stringify(data));                if(                    resData.success                ){                    alert(resData.successInfo);                }else {                    alert(resData.errorMessage);                }            }).catch(e => console.log('错误:', e))    }    handleClear(){        const mobile = this.inputMobileValue.value;        const formData = new FormData();        formData.append("mobile",mobile);        const requestBody=new URLSearchParams(formData).toString()        const url = config.clearBalance;        const opts = {            mode: 'cors',            method:"POST",            body:requestBody,            headers: {                'Accept': 'application/json',                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',            },        };        fetch(url, opts).then(res => res.text())            .then(data => {                const resData=JSON.parse(data);                console.log("data=" +JSON.stringify(data));                if(                    resData.success                ){                    alert(resData.successInfo);                }else {                    alert(resData.errorMessage);                }            }).catch(e => console.log('错误:', e))    }    render(){        return(            <div>                <div>                    <span>                    <label >手机号码：<input style={{"width":'99px', "height":'20px'}} id="mobile" type="text" ref={mobileValue => this.inputMobileValue = mobileValue} defaultValue="13093863511"/>                    </label>测试在用的小B用户:<label> &nbsp;15356170982 &nbsp;</label>,<label> &nbsp;13699512634 &nbsp;</label>,<label> &nbsp;13093863511 &nbsp;</label>                    </span>                </div>                <div>                    <label >现金金额：<input style={{"width":'100px', "height":'20px'}} id="amount" type="text" ref={CashAmountValue => this.inputCashAmountValue = CashAmountValue} defaultValue="100"                    />提示:输入100表示充值1元</label>                </div>                <div>                    <label >红包金额：<input style={{"width":'100px', "height":'20px'}} id="amount" type="text" ref={SubsidyAmountValue => this.inputSubsidyAmountValue = SubsidyAmountValue} defaultValue="0"                    />提示:输入100表示充值1元</label>                </div>                <div>                    <span>                    <label >                        <button onClick={this.handleSearch.bind(this)}>提交</button>                    </label>                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                    <label>                        <button onClick={this.handleClear.bind(this)}>清除用户余额</button>                    </label>                    </span>                </div>            </div>        )    }}