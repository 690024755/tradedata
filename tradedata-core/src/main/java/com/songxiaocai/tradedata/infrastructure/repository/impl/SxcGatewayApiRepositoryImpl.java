package com.songxiaocai.tradedata.infrastructure.repository.impl;/* * Description:com.songxiaocai.tradedata.infrastructure.repository.impl * @Date Create on 13:44 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-04-03æ—¥SXC All Rights Reserved. */import com.songxiaocai.tradedata.application.repository.SxcGatewayApiRepository;import com.songxiaocai.tradedata.infrastructure.repository.entity.SxcGatewayApi;import com.songxiaocai.tradedata.infrastructure.repository.mapper.SxcGatewayApiMapper;import com.songxiaocai.tradedata.service.params.SxcGatewayApiInfoDTO;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Repository;import org.springframework.util.CollectionUtils;import java.util.HashMap;import java.util.List;@Slf4j@Repositorypublic class SxcGatewayApiRepositoryImpl implements SxcGatewayApiRepository {	@Autowired	SxcGatewayApiMapper sxcGatewayApiMapper;	@Override	public SxcGatewayApiInfoDTO getApiByName(String apiName) {		SxcGatewayApiInfoDTO sxcGatewayApiInfoDTO=new SxcGatewayApiInfoDTO();		List<SxcGatewayApi> list=sxcGatewayApiMapper.getApiByName(apiName);		if(CollectionUtils.isEmpty(list)){			return null;		}		list.forEach(ss->{			BeanUtils.copyProperties(ss,sxcGatewayApiInfoDTO);		});		return sxcGatewayApiInfoDTO;	}	@Override	public Boolean updateByApiName(HashMap<String, Object> hs) {		Integer num=sxcGatewayApiMapper.updateByApiName(hs);		if(num<0){	      return false;		}		return true;	}	@Override	public Boolean insert(HashMap<String, Object> hs) {		Integer num=sxcGatewayApiMapper.insert(hs);		if(num<0){			return false;		}		return true;	}	@Override	public Boolean delete(String apiName) {		Integer num=sxcGatewayApiMapper.deleteByApiName(apiName);		if(num<0){			return false;		}		return true;	}}