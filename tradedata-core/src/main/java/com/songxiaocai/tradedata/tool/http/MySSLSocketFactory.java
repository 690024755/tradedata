package com.songxiaocai.tradedata.tool.http;/* * Description:com.songxiaocai.tradedata.http * @Date Create on 14:01 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-02-25æ—¥SXC All Rights Reserved. */import org.apache.http.conn.ssl.SSLSocketFactory;import javax.net.ssl.SSLContext;import javax.net.ssl.TrustManager;import javax.net.ssl.X509TrustManager;import java.io.IOException;import java.net.Socket;import java.net.UnknownHostException;import java.security.*;import java.security.cert.CertificateException;import java.security.cert.X509Certificate;public class MySSLSocketFactory extends SSLSocketFactory {	SSLContext sslContext = SSLContext.getInstance("TLS");	public MySSLSocketFactory(KeyStore truststore)			throws NoSuchAlgorithmException, KeyManagementException,			KeyStoreException, UnrecoverableKeyException	{		super(truststore);		TrustManager tm = new X509TrustManager(){			public void checkClientTrusted(X509Certificate[] chain,										   String authType) throws CertificateException			{			}			public void checkServerTrusted(X509Certificate[] chain,										   String authType) throws CertificateException			{			}			public X509Certificate[] getAcceptedIssuers()			{				return null;			}		};		sslContext.init(null, new TrustManager[] { tm }, null);	}	@Override	public Socket createSocket(Socket socket, String host, int port,							   boolean autoClose) throws IOException, UnknownHostException	{		return sslContext.getSocketFactory().createSocket(socket, host, port,				autoClose);	}	@Override	public Socket createSocket() throws IOException	{		return sslContext.getSocketFactory().createSocket();	}}