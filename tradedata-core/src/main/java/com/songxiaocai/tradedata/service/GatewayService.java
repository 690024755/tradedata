package com.songxiaocai.tradedata.service;/* * Description:com.songxiaocai.tradedata.service * @Date Create on 14:49 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-04-03日SXC All Rights Reserved. */import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import com.google.common.collect.Maps;import com.songxiaocai.tradedata.application.repository.SxcGatewayApiRepository;import com.songxiaocai.tradedata.config.dataSource.DataSourceTypeManager;import com.songxiaocai.tradedata.config.dataSource.DataSources;import com.songxiaocai.tradedata.service.params.SxcGatewayApiInfoDTO;import com.sxc.common.domain.result.Result;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.*;@Service@Slf4jpublic class GatewayService {	@Autowired	private SxcGatewayApiRepository sxcGatewayApiRepository;	public Result<String> modifyApiDefine(String apiName)  {		Result<String> result = new Result<String>();		DataSourceTypeManager.set(DataSources.dev);		SxcGatewayApiInfoDTO sxcGatewayApiInfoDTOdev = sxcGatewayApiRepository.getApiByName(apiName);		if (sxcGatewayApiInfoDTOdev == null) {			result.setSuccess(false);			result.setErrorMessage("apiName undefine");			result.setData(apiName);			return result;		}		String ApiDefinedev = sxcGatewayApiInfoDTOdev.getApiDefine();		DataSourceTypeManager.reset();		SxcGatewayApiInfoDTO sxcGatewayApiInfoDTOtestProd = sxcGatewayApiRepository.getApiByName(apiName);		if(sxcGatewayApiInfoDTOtestProd != null){			Boolean bl=sxcGatewayApiRepository.delete(apiName);			System.out.println("删除稳定测试环境apiName="+apiName+"成功"+bl);			SxcGatewayApiInfoDTO intestProd = new SxcGatewayApiInfoDTO();			HashMap<String, Object> in = Maps.newHashMap();			BeanUtils.copyProperties(sxcGatewayApiInfoDTOdev, intestProd);			String ApiDefinetestProd = ApiDefinedev.replace("1.0.0.daily", "1.0.0.test");			intestProd.setApiDefine(ApiDefinetestProd);			in.put("apiName", intestProd.getApiName());			in.put("apiDefine", intestProd.getApiDefine());			in.put("apiCallPermission", intestProd.getApiCallPermission());			in.put("apiTag", intestProd.getApiTag());			in.put("apiTag", intestProd.getApiTag());			result.setSuccess(sxcGatewayApiRepository.insert(in) == true ? true : false);			result.setSuccessInfo("稳定测试环境部署成功");		}else {			SxcGatewayApiInfoDTO intestProd = new SxcGatewayApiInfoDTO();			HashMap<String, Object> in = Maps.newHashMap();			BeanUtils.copyProperties(sxcGatewayApiInfoDTOdev, intestProd);			String ApiDefinetestProd = ApiDefinedev.replace("1.0.0.daily", "1.0.0.test");			intestProd.setApiDefine(ApiDefinetestProd);			in.put("apiName", intestProd.getApiName());			in.put("apiDefine", intestProd.getApiDefine());			in.put("apiCallPermission", intestProd.getApiCallPermission());			in.put("apiTag", intestProd.getApiTag());			in.put("apiTag", intestProd.getApiTag());			result.setSuccess(sxcGatewayApiRepository.insert(in) == true ? true : false);			result.setErrorMessage("稳定测试环境部署成功");		}		return result;	}}