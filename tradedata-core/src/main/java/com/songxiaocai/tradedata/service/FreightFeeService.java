package com.songxiaocai.tradedata.service;/* * Description:com.songxiaocai.tradedata.service * @Date Create on 11:17 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-05-16日SXC All Rights Reserved. */import com.songxiaocai.tradedata.application.repository.SxcBuyerRepository;import com.songxiaocai.tradedata.application.repository.SxcFreightRuleMapRepository;import com.songxiaocai.tradedata.application.repository.SxcStorehouseRepository;import com.songxiaocai.tradedata.application.repository.SxcUserRepository;import com.songxiaocai.tradedata.infrastructure.repository.entity.SxcFreightRuleMap;import com.songxiaocai.tradedata.infrastructure.repository.entity.SxcStorehouse;import com.songxiaocai.tradedata.infrastructure.repository.entity.example.SxcFreightRuleMapExample;import com.songxiaocai.tradedata.service.params.SxcBuyerInfoDTO;import com.songxiaocai.tradedata.service.params.SxcUserInfoDTO;import com.sxc.common.domain.result.Result;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.HashMap;import java.util.List;@Service@Slf4jpublic class FreightFeeService {	@Autowired	private SxcFreightRuleMapRepository sxcFreightRuleMapRepository;	@Autowired	private SxcStorehouseRepository sxcStorehouseRepository;	@Autowired	private SxcUserRepository sxcUserRepository;	@Autowired	private SxcBuyerRepository sxcBuyerRepository;	/**	 *	 * @param ruleId 规则列表id	 * @param isFreight true收取运费，false不收取运费	 * @return	 */	public Result<String> modifyFreightFee(Integer ruleId, String mobile, Boolean isFreight)  {        int linkId=0;		Result<String> result=new Result<>();        //查询小B用户所属的服务站，最后赋值给linkId		if(!StringUtils.isNotBlank(mobile) && !StringUtils.isNotBlank(String.valueOf(ruleId))){			result.setSuccess(false);			result.setErrorMessage("参数不为空");			log.info("参数不为空ruleId = {} ,mobile = {}",ruleId,mobile);			return result;		}		SxcBuyerInfoDTO sxcBuyerInfoDTO=null;		List<SxcStorehouse> list=null;		HashMap<String, Object> hs =new HashMap<String, Object>();		hs.put("mobilePhone",mobile);		hs.put("userType",1);		SxcUserInfoDTO sxcUserInfoDTO=sxcUserRepository.getByMobilePhone(hs);		if(sxcUserInfoDTO!=null ){			sxcBuyerInfoDTO=sxcBuyerRepository.getByBuyerUserId(sxcUserInfoDTO.getUserId());		}else {			result.setSuccess(false);			result.setErrorMessage("查询不到用户信息");			return result;		}		if(sxcBuyerInfoDTO!=null ){			list=sxcStorehouseRepository.getById(sxcBuyerInfoDTO.getBuyerStorehouseId());		}else {			result.setSuccess(false);			result.setErrorMessage("查询不到买家信息");			return result;		}        if(!list.isEmpty()){			linkId=list.get(0).getId();		}		SxcFreightRuleMapExample example=new SxcFreightRuleMapExample();		SxcFreightRuleMapExample.Criteria cr=example.createCriteria();		cr.andRuleIdEqualTo(ruleId);		cr.andLinkIdEqualTo(linkId);		SxcFreightRuleMap record=new SxcFreightRuleMap();		if(isFreight){			record.setStatus(1);		}else {			record.setStatus(0);		}		Boolean bl=sxcFreightRuleMapRepository.updateByExampleSelective(record,example);		if(bl){			result.setSuccess(true);			result.setSuccessInfo("修改运费成功");			return result;		}else{			result.setSuccess(false);			result.setSuccessInfo("修改运费失败");			return result;		}	}}