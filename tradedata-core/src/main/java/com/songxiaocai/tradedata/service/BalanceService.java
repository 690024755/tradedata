package com.songxiaocai.tradedata.service;/* * Description:com.songxiaocai.tradedata.service * @Date Create on 09:39 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-03-19日SXC All Rights Reserved. */import com.songxiaocai.tradedata.application.repository.SxcAccountRepository;import com.songxiaocai.tradedata.application.repository.SxcUserRepository;import com.songxiaocai.tradedata.client.result.SxcAccountInfoDTO;import com.songxiaocai.tradedata.service.params.SxcUserInfoDTO;import com.sxc.common.domain.result.Result;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import org.springframework.stereotype.Service;import java.util.HashMap;@Service@Slf4jpublic class BalanceService {	@Autowired	private SxcAccountRepository sxcAccountRepository;	@Autowired	private SxcUserRepository sxcUserRepository;	public Result<String> modifyBalance(String mobile, Long cashAmount,Long subsidyAmount,Long baseCashAmount){		Result<String> re=new Result<>();		Boolean bl=false;		try{			HashMap<String, Object> hs =new HashMap<String, Object>();			hs.put("mobilePhone",mobile);			hs.put("userType",1);			SxcUserInfoDTO sxcUserInfoDTO=sxcUserRepository.getByMobilePhone(hs);			if(sxcUserInfoDTO ==null){				re.setSuccess(false);				re.setErrorMessage("查询不到小B用户信息");				return re;			} else if(sxcUserInfoDTO!=null && StringUtils.isNotBlank(String.valueOf(sxcUserInfoDTO.getUserId()))){				SxcAccountInfoDTO sxcAccountInfoDTO=sxcAccountRepository.getByUserId(sxcUserInfoDTO.getUserId());				if(sxcAccountInfoDTO==null){					re.setSuccess(false);					re.setErrorMessage("查询不到小B用户账户信息");					return re;				}				Long cashAmountTmp=cashAmount+(sxcAccountInfoDTO.getCashBalance()==null?0:sxcAccountInfoDTO.getCashBalance());				Long subsidyAmountTmp=subsidyAmount+(sxcAccountInfoDTO.getSubsidyBalance()==null?0:sxcAccountInfoDTO.getSubsidyBalance());				Long baseCashAmountTmp=baseCashAmount+(sxcAccountInfoDTO.getBaseCashBalance()==null?0:sxcAccountInfoDTO.getBaseCashBalance());				Long balanceAmountTmp=baseCashAmount+subsidyAmount+cashAmount+(sxcAccountInfoDTO.getBalance()==null?0:sxcAccountInfoDTO.getBalance());				bl=sxcAccountRepository.modifyBalance(sxcUserInfoDTO.getUserId(),cashAmountTmp,subsidyAmountTmp,baseCashAmountTmp,balanceAmountTmp);			}            if(bl){				re.setSuccess(true);			}else{				re.setSuccess(false);				re.setErrorMessage("修改小B用户余额失败");				return re;			}		}catch (Exception e){			log.error("修改小B余额异常: {}", e);			re.setSuccess(false);			re.setErrorMessage("修改小B余额异常");			return re;		}		re.setData("修改小B用户余额成功");		re.setSuccess(true);		return re;	}	public Result<String> clearBalance(String mobile){		Result<String> re=new Result<>();		Boolean bl=false;		try{			HashMap<String, Object> hs =new HashMap<String, Object>();			hs.put("mobilePhone",mobile);			hs.put("userType",1);			SxcUserInfoDTO sxcUserInfoDTO=sxcUserRepository.getByMobilePhone(hs);			if(sxcUserInfoDTO ==null){				re.setSuccess(false);				re.setErrorMessage("查询不到小B用户信息");				return re;			} else if(sxcUserInfoDTO!=null && StringUtils.isNotBlank(String.valueOf(sxcUserInfoDTO.getUserId()))){				SxcAccountInfoDTO sxcAccountInfoDTO=sxcAccountRepository.getByUserId(sxcUserInfoDTO.getUserId());				if(sxcAccountInfoDTO==null){					re.setSuccess(false);					re.setErrorMessage("查询不到小B用户账户信息");					return re;				}				Long cashAmountTmp=0L;				Long subsidyAmountTmp=0L;				Long baseCashAmountTmp=0L;				Long balanceAmountTmp=0L;				bl=sxcAccountRepository.modifyBalance(sxcUserInfoDTO.getUserId(),cashAmountTmp,subsidyAmountTmp,baseCashAmountTmp,balanceAmountTmp);			}			if(bl){				re.setSuccess(true);			}else{				re.setSuccess(false);				re.setErrorMessage("清除小B用户余额失败");				return re;			}		}catch (Exception e){			log.error("清除小B余额异常: {}", e);			re.setSuccess(false);			re.setErrorMessage("清除小B余额异常");			return re;		}		re.setData("清除小B用户余额成功");		re.setSuccess(true);		return re;	}}