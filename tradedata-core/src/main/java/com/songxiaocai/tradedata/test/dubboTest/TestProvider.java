package com.songxiaocai.tradedata.test.dubboTest;/* * Description:com.songxiaocai.tradedata.test.dubboTest * @Date Create on 17:32 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-02-22æ—¥SXC All Rights Reserved. */import com.alibaba.dubbo.config.annotation.Reference;import com.alibaba.fastjson.JSON;import com.sxc.gateway.client.GWListResult;import com.sxc.gateway.client.GWResult;import com.sxc.jothuheim.userbaseclient.param.UserInfoQueryDTO;import com.sxc.jothuheim.userbaseclient.provider.UserBaseQueryProvider;import com.sxc.jothuheim.userbaseclient.result.BaseUserInfoDTO;import com.sxc.jotunheim.provider.sku.SkuQueryProvider;import com.sxc.jotunheim.result.sku.SkuDTO;import lombok.extern.slf4j.Slf4j;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;import org.testng.annotations.Test;import java.util.Collection;@Slf4j@ContextConfiguration(locations = {"/META-INF/spring/tradedata-context.xml"})public class TestProvider extends AbstractTestNGSpringContextTests {	@Reference(timeout = 6000000, version = "1.0.0.test")	private SkuQueryProvider skuQueryProvider;	@Reference(timeout = 6000000)	private UserBaseQueryProvider userBaseQueryProvider;	@Test	public void test() {		GWResult<SkuDTO> skuResult = skuQueryProvider.queryById(9563);		SkuDTO skuDTO = skuResult.getResult();		log.info("test=" + JSON.toJSONString(skuDTO));	}	@Test	public void test1() {		UserInfoQueryDTO userInfoQueryDTO=new UserInfoQueryDTO();		userInfoQueryDTO.setIsValid(1);		userInfoQueryDTO.setMobilePhone("13093863511");		userInfoQueryDTO.setUserType(1);		GWListResult<BaseUserInfoDTO> re= userBaseQueryProvider.getUserInfo(userInfoQueryDTO);		Collection<BaseUserInfoDTO> cl=re.getResult();		log.info("test=" + JSON.toJSONString(cl));	}}