<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.songxiaocai.tradedata.infrastructure.repository.mapper.SxcOrderMapper">
  <resultMap id="SxcOrderResultMap" type="com.songxiaocai.tradedata.infrastructure.repository.entity.SxcOrder">
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="total_fee" jdbcType="BIGINT" property="totalFee" />
    <result column="buyer_id" jdbcType="INTEGER" property="buyerId" />
    <result column="buyer_name" jdbcType="VARCHAR" property="buyerName" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="seller_name" jdbcType="VARCHAR" property="sellerName" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="operator_user_id" jdbcType="INTEGER" property="operatorUserId" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="pickhouse_id" jdbcType="INTEGER" property="pickhouseId" />
    <result column="centerhouse_id" jdbcType="INTEGER" property="centerhouseId" />
    <result column="picktime" jdbcType="TIMESTAMP" property="picktime" />
    <result column="buyer_pickhouse_id" jdbcType="INTEGER" property="buyerPickhouseId" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="refund_num" jdbcType="INTEGER" property="refundNum" />
    <result column="discounted_fee" jdbcType="BIGINT" property="discountedFee" />
    <result column="delivery_status" jdbcType="INTEGER" property="deliveryStatus" />
    <result column="sell_status" jdbcType="INTEGER" property="sellStatus" />
    <result column="cash_back" jdbcType="BIGINT" property="cashBack" />
    <result column="cash_back_time" jdbcType="TIMESTAMP" property="cashBackTime" />
    <result column="is_cash_back" jdbcType="INTEGER" property="isCashBack" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="features" jdbcType="VARCHAR" property="features" />
    <result column="city_code" jdbcType="INTEGER" property="cityCode" />
  </resultMap>

    <sql id="tableName">
		sxc_oc.sxc_order
	</sql>

  <sql id="columns">
    order_no, num, total_fee, buyer_id, buyer_name, seller_id, seller_name, pay_type, 
    order_status, create_time, state, operator_user_id, area_code, pickhouse_id, centerhouse_id, 
    picktime, buyer_pickhouse_id, last_update_time, pay_time, refund_num, discounted_fee, 
    delivery_status, sell_status, cash_back, cash_back_time, is_cash_back, order_type, features,
    city_code
  </sql>

    <select id="getByBuyerId" resultMap="SxcOrderResultMap" parameterType = "INTEGER">
        select <include refid="columns" /> from
        <include refid="tableName" />
        where buyer_id=#{buyerId,jdbcType = INTEGER} and state=1
    </select>

    <update id="modifyStatee" parameterType = "HashMap">
        UPDATE <include refid="tableName" /> set state=#{state}  where buyer_id=#{buyerId} and state=1
    </update>

    <update id="updateBatch" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";">
    update <include refid="tableName" /> set
        state = #{item.state} where order_no=#{item.orderNo}
    </foreach>
    </update>

    <!--一次插入一条-->
    <insert id="insertBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            insert <include refid="tableName" />
            (`order_no`, `num`, `total_fee`, `buyer_id`, `buyer_name`, `pay_type`, `order_status`, `create_time`, `state`, `operator_user_id`, `pickhouse_id`, `centerhouse_id`, `picktime`, `buyer_pickhouse_id`, `last_update_time`, `pay_time`, `refund_num`, `discounted_fee`, `delivery_status`, `sell_status`, `is_cash_back`, `order_type`, `features`, `city_code`)VALUES
            (#{item.orderNo},#{item.num},#{item.totalFee},#{item.buyerId},#{item.buyerName},#{item.payType},#{item.orderStatus},#{item.createTime},#{item.state},#{item.operatorUserId},#{item.pickhouseId},#{item.centerhouseId},#{item.picktime},#{item.buyerPickhouseId},#{item.lastUpdateTime},#{item.payTime},#{item.refundNum},#{item.discountedFee},#{item.deliveryStatus},#{item.sellStatus},#{item.isCashBack},#{item.orderType},#{item.features},#{item.cityCode}
            )
        </foreach>
    </insert>

    <!--一次插入多条sql-->
    <insert id="insertOneBatch" parameterType="java.util.List">

            insert <include refid="tableName" />
            (`order_no`, `num`, `total_fee`, `buyer_id`, `buyer_name`, `pay_type`, `order_status`, `create_time`, `state`, `operator_user_id`, `pickhouse_id`, `centerhouse_id`, `picktime`, `buyer_pickhouse_id`, `last_update_time`, `pay_time`, `refund_num`, `discounted_fee`, `delivery_status`, `sell_status`, `is_cash_back`, `order_type`, `features`, `city_code`)VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            ( #{item.orderNo},#{item.num},#{item.totalFee},#{item.buyerId},#{item.buyerName},#{item.payType},#{item.orderStatus},#{item.createTime},#{item.state},#{item.operatorUserId},#{item.pickhouseId},#{item.centerhouseId},#{item.picktime},#{item.buyerPickhouseId},#{item.lastUpdateTime},#{item.payTime},#{item.refundNum},#{item.discountedFee},#{item.deliveryStatus},#{item.sellStatus},#{item.isCashBack},#{item.orderType},#{item.features},#{item.cityCode}
            )
        </foreach>
    </insert>


</mapper>