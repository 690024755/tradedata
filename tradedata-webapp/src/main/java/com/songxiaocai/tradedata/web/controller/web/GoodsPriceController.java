package com.songxiaocai.tradedata.web.controller.web;/* * Description:com.songxiaocai.tradedata.web.controller.web * @Date Create on 15:09 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-05-13日SXC All Rights Reserved. */import com.alibaba.fastjson.JSON;import com.songxiaocai.tradedata.service.GatewayService;import com.songxiaocai.tradedata.service.GoodsPriceService;import com.sxc.common.domain.result.Result;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import java.util.HashMap;@Slf4j@Controller@RequestMapping("/api/tradedata/web")public class GoodsPriceController {	@Autowired	private GoodsPriceService goodsPriceService;	@RequestMapping(value = "/modifyGoodsPrice",method = RequestMethod.POST)	@ResponseBody	public Result<?> apiNameDeploy(Integer ItemId,Long raisePrice,Long basePrice) {		Result result=new Result();		if(StringUtils.isAllBlank(String.valueOf(ItemId),String.valueOf(raisePrice),String.valueOf(basePrice)))		{			result.setSuccess(false);			result.setErrorMessage("请求参数为空！");			log.info(String.format("%s %s %s %s",  String.valueOf(ItemId), String.valueOf(raisePrice),String.valueOf(basePrice)));			return result;		}		try{			Result<String> BasePricebl=goodsPriceService.modifyBasePrice(ItemId,basePrice);			Result<String> RaisePricebl=goodsPriceService.modifyRaisePrice(ItemId,raisePrice);			if( !BasePricebl.isSuccess() || !RaisePricebl.isSuccess()){				result.setErrorMessage("修改下单价格失败");				result.setSuccess(false);				result.setData(BasePricebl.getErrorMessage()+RaisePricebl.getErrorMessage());				return result;			}			result.setSuccessInfo("修改下单价格成功");			result.setSuccess(true);		}catch (Exception e){			log.error("修改下单价格异常", e);			result.setErrorMessage("修改下单价格异常");			result.setSuccess(false);			result.setE(e);			return result;		}		return result;	}}