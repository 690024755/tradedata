package com.songxiaocai.tradedata.web.controller.web;/* * Description:com.songxiaocai.tradedata.web.controller.web * @Date Create on 17:14 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-04-10日SXC All Rights Reserved. */import com.alibaba.fastjson.JSON;import com.songxiaocai.tradedata.service.RebateService;import com.sxc.common.domain.result.Result;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import java.util.HashMap;@Slf4j@Controller@RequestMapping("/api/tradedata/web")public class RebateController {	@Autowired	private RebateService rebateService;	/**	 * 执行返差价接口	 * @return	 */	@RequestMapping(value = "/excute/rebate",method = RequestMethod.POST)	@ResponseBody	public Result<?> excuteRebate(String operateId) {		Result result=new Result();		Boolean bl=false;		try{			 bl=rebateService.excutePrice(Integer.valueOf(operateId))==true?true:false;			result.setSuccessInfo("执行返差价成功");			result.setSuccess(bl);		}catch (Exception e){			log.error("执行返差价异常", e);			result.setErrorMessage("执行返差价异常");			result.setSuccess(bl);			result.setE(e);			return result;		}		if(bl){		result.setSuccess(true);		result.setSuccessInfo("执行行情返差价成功");		}		return result;	}	/**	 * 修改采购价格	 * @param ItemIdsArray,amount	 */	@RequestMapping(value = "/modify/purchase/inquiry/price",method = RequestMethod.POST)	@ResponseBody	public Result<?> modifyPurchaseInquiryPrice(String ItemIdsArray, String amount) {		Result result=new Result();		if(StringUtils.isAllBlank(ItemIdsArray,amount))		{			result.setSuccess(false);			result.setErrorMessage("请求参数为空！");			log.info("ItemIdsArray: {},amount :{}", ItemIdsArray,amount);			return result;		}		int num=0;		try{			String[] ItemIdArray = ItemIdsArray.split(",");			HashMap<String,String> deployResult=new HashMap<String,String>();			for (String ItemId : ItemIdArray) {				Result<String> re=rebateService.modifyPrice(Integer.valueOf(ItemId),Long.valueOf(amount));				if(!re.isSuccess()){					deployResult.put("ItemId="+ItemId,re.getErrorMessage());					num++;				}			}			if( deployResult.size()>0){				result.setErrorMessage("采购价格修改失败条数="+num+",ErrorMessage="+ JSON.toJSONString(deployResult));				result.setSuccess(false);				result.setData(deployResult);				return result;			}			result.setSuccessInfo("采购价格修改成功");			result.setSuccess(true);		}catch (Exception e){			log.error("采购价格修改异常", e);			result.setSuccessInfo("采购价格修改异常");			result.setSuccess(false);			result.setE(e);			return result;		}		return result;	}}