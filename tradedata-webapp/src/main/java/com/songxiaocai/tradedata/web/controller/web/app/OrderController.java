package com.songxiaocai.tradedata.web.controller.web.app;/* * Description:com.songxiaocai.tradedata.web.controller.web.app * @Date Create on 18:58 * @author <a href="mailto:yangyi@songxiaocai.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-04-10日SXC All Rights Reserved. */import com.songxiaocai.tradedata.application.repository.SxcBuyerRepository;import com.songxiaocai.tradedata.application.repository.SxcUserRepository;import com.songxiaocai.tradedata.service.OrderService;import com.songxiaocai.tradedata.service.params.SxcBuyerInfoDTO;import com.songxiaocai.tradedata.service.params.SxcUserInfoDTO;import com.sxc.common.domain.result.Result;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import java.util.HashMap;@Slf4j@Controller@RequestMapping("/api/tradedata/web/app")public class OrderController {	@Autowired	private OrderService orderService;	@Autowired	private SxcBuyerRepository sxcBuyerRepository;	@Autowired	private SxcUserRepository sxcUserRepository;	/**	 * 小B下单接口	 * 输入小B手机号码，即可进行下单	 */	@RequestMapping(value = "/place/order", method = RequestMethod.POST)	@ResponseBody	public Result<?> placeOrder(String mobile) {		Result result = new Result();		if (StringUtils.isAllBlank(mobile)) {			result.setSuccess(false);			result.setErrorMessage("请求参数为空！");			log.info("mobile: {}", mobile);			return result;		}		try {			Result<String> re = orderService.placeOrder(mobile);			if (!re.isSuccess()) {				result.setE(re.getE());				result.setSuccess(re.isSuccess());				result.setData(re.getData());				result.setErrorMessage(re.getErrorMessage());				return result;			}			result.setSuccess(re.isSuccess());			result.setData(re.getData());			result.setSuccessInfo(re.getSuccessInfo());			return result;		} catch (Exception e) {			result.setErrorMessage("小B用户下单且付款成功异常");			result.setSuccess(false);			result.setE(e);		}		return result;	}	/**	 * 清理小B用户历史订单接口	 * @param mobile,小B用户的手机号码	 * @return	 */	@RequestMapping(value = "/modify/order/status", method = RequestMethod.POST)	@ResponseBody	public Result<?> modifyOrderStatus(String mobile) {		Result result = new Result();		Result<String> re=null;		if (StringUtils.isAllBlank(mobile)) {			result.setSuccess(false);			result.setErrorMessage("请求参数为空！");			log.info("mobile: {}", mobile);			return result;		}		try {			HashMap<String, Object> hs =new HashMap<String, Object>();			hs.put("mobilePhone",mobile);			hs.put("userType",1);			SxcUserInfoDTO sxcUserInfoDTO=sxcUserRepository.getByMobilePhone(hs);			if(sxcUserInfoDTO ==null){				result.setSuccess(false);				result.setErrorMessage("查询不到小B用户信息");				return result;			}			SxcBuyerInfoDTO sxcBuyerInfoDTO=sxcBuyerRepository.getByBuyerUserId(sxcUserInfoDTO.getUserId());			if(sxcBuyerInfoDTO ==null){				result.setSuccess(false);				result.setErrorMessage("查询不到买家信息");				return result;			}			re = orderService.modifyOrderStatus(sxcBuyerInfoDTO.getBuyerUserId(),0);			if (!re.isSuccess()) {				if(re.getE()!=null){					result.setE(re.getE());				}				result.setSuccess(re.isSuccess());				result.setData(re.getData());				result.setErrorMessage(re.getErrorMessage());				return result;			}			result.setSuccess(re.isSuccess());			result.setData(re.getData());			result.setSuccessInfo(re.getSuccessInfo());			return result;		} catch (Exception e) {			result.setErrorMessage(re.getErrorMessage());			result.setSuccess(re.isSuccess());			result.setE(e);		}		return result;	}}